name: LaTeX to PDF

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build PDF
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Install texlive
        run: sudo apt install texlive-base

      - name: Install texlive-latex-extra
        run: sudo apt-get install texlive-latex-extra

      - name: Build pdf
        run: pdflatex -jobname resume main.tex

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v3
        with:
          name: resume
          path: resume.pdf

  deploy:
    name: Deploy PDF
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download PDF Artifact
        uses: actions/download-artifact@v3
        with:
          name: resume

      - name: Test artifact download
        run: ls -R

      - name: Create or Update GitHub Release
        id: create_or_update_release
        run: |
          # Set your GitHub username
          GITHUB_USER="uddeepta.deka"
          # Set your GitHub repository name
          REPO_NAME="my_CV"
          # Set your static tag name
          TAG_NAME="v.1.0"

          # Check if the release already exists
          RELEASE_ID=$(curl -s -X GET "https://api.github.com/repos/$GITHUB_USER/$REPO_NAME/releases/tags/$TAG_NAME" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq -r '.id')

          if [ -n "$RELEASE_ID" ]; then
            # Update the release by uploading assets
            RELEASE_URL=$(curl -s -X GET "https://api.github.com/repos/$GITHUB_USER/$REPO_NAME/releases/$RELEASE_ID" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq -r '.upload_url')
            RELEASE_URL=${RELEASE_URL%\{*}

            # Upload the PDF artifact
            curl -X POST "$RELEASE_URL?name=main.pdf" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/pdf" --data-binary "@main.pdf"
          else
            # Create a new release and upload the PDF artifact
            RELEASE_BODY="Release for $TAG_NAME"
            RELEASE_ID=$(curl -s -X POST "https://api.github.com/repos/$GITHUB_USER/$REPO_NAME/releases" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"$TAG_NAME\",\"body\":\"$RELEASE_BODY\"}" | jq -r '.id')

            # Upload the PDF artifact
            RELEASE_URL="https://uploads.github.com/repos/$GITHUB_USER/$REPO_NAME/releases/$RELEASE_ID/assets?name=main.pdf"
            curl -X POST "$RELEASE_URL" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/pdf" --data-binary "@main.pdf"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}