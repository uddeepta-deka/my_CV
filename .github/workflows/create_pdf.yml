name: LateX to PDF

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_pdf:
    name: Build project
    runs-on: ubuntu-latest
    steps:

      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Install texlive
        run: sudo apt install texlive-base

      - name: Install texlive-latex-extra
        run: sudo apt-get install texlive-latex-extra

      - name: Build pdf
        run: pdflatex -jobname resume main.tex

      - name: Upload PDF file
        uses: actions/upload-artifact@v3
        with:
          name: resume
          path: resume.pdf

  release_pdf:
    name: Release project
    runs-on: ubuntu-latest
    needs: build_pdf
    steps:

      - name: Download artifact
        uses: actions/download-artifact@v3
        with: 
          name: resume
      
      - name: Test artifact download
        run: ls -R
  
  deploy_pdf:
    name: Commit and push pdf
    runs-on: ubuntu-latest
    needs: release_pdf
    steps:
      - name: commit and push
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          mv resume.pdf .
          git add main.pdf
          git commit -m "Add built PDF"
          git push 
  # deploy_pdf:
  #   name: Commit to repository
  #   runs-on: ubuntu-latest
  #   needs: release_pdf
  #   steps:

  #     - name: Commit to orphan branch
  #       run: |
  #         git checkout --orphan pdflatex
  #         git rm -rf .
  #         git add *.pdf
  #         git -c user.name='GitHub Action' -c user.email='action@github.com' commit -m "Built paper"

  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: pdflatex
  #         force: true
      # - name: Set version as short sha
      #   run: echo "VERSION=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      
      # - name: Get asset name
      #   run: echo "RESUME_NAME=resume.pdf" >> $GITHUB_ENV

      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: Release ${{ env.VERSION }}
      #     draft: false
      #     prerelease: false
        
      # - name: Upload pdf
      #   id: upload-release-pdf
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ env.RESUME_TARGET }}
      #     asset_name: ${{ env.RESUME_NAME }}
      #     asset_content_type: application/pdf