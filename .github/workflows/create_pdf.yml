name: LaTeX to PDF

on:
  push:
    branches:
      - main  # Replace with your repository's main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup LaTeX Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive-xetex

      - name: Build LaTeX Document
        run: |
          # Replace 'main.tex' with the name of your main LaTeX file
          xelatex main.tex
          bibtex main.aux  # Uncomment if you use BibTeX for citations
          xelatex main.tex
          xelatex main.tex

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v2
        with:
          name: pdf-artifact
          path: main.pdf  # Replace with the name of your main PDF file

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download PDF Artifact
        uses: actions/download-artifact@v2
        with:
          name: pdf-artifact

      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Commit and Push PDF
        run: |
          # Replace 'main.pdf' with the name of your main PDF file
          mv pdf-artifact/main.pdf .
          git add main.pdf
          git commit -m "Add built PDF"
          git push

# name: LateX to PDF

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build_pdf:
#     name: Build project
#     runs-on: ubuntu-latest
#     steps:

#       - name: Set up Git repository
#         uses: actions/checkout@v3

#       - name: Install texlive
#         run: sudo apt install texlive-base

#       - name: Install texlive-latex-extra
#         run: sudo apt-get install texlive-latex-extra

#       - name: Build pdf
#         run: pdflatex -jobname resume main.tex

#       - name: Upload PDF file
#         uses: actions/upload-artifact@v3
#         with:
#           name: resume
#           path: resume.pdf

#   release_pdf:
#     name: Release project
#     runs-on: ubuntu-latest
#     needs: build_pdf
#     steps:

#       - name: Download artifact
#         uses: actions/download-artifact@v3
#         with: 
#           name: resume
      
#       - name: Test artifact download
#         run: ls -R
  
#   deploy_pdf:
#     name: Commit and push pdf
#     runs-on: ubuntu-latest
#     needs: release_pdf
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       - name: configure git
#         run: |
#           git config --local user.email "actions@github.com"
#           git config --local user.name "GitHub Actions"
      
#       - name: commit and push PDF
#         run: |
#           mv resume/resume.pdf .
#           git add resume.pdf
#           git commit -m "Add built PDF"
#           git push 
  # deploy_pdf:
  #   name: Commit to repository
  #   runs-on: ubuntu-latest
  #   needs: release_pdf
  #   steps:

  #     - name: Commit to orphan branch
  #       run: |
  #         git checkout --orphan pdflatex
  #         git rm -rf .
  #         git add *.pdf
  #         git -c user.name='GitHub Action' -c user.email='action@github.com' commit -m "Built paper"

  #     - name: Push changes
  #       uses: ad-m/github-push-action@master
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         branch: pdflatex
  #         force: true
      # - name: Set version as short sha
      #   run: echo "VERSION=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      
      # - name: Get asset name
      #   run: echo "RESUME_NAME=resume.pdf" >> $GITHUB_ENV

      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: Release ${{ env.VERSION }}
      #     draft: false
      #     prerelease: false
        
      # - name: Upload pdf
      #   id: upload-release-pdf
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ${{ env.RESUME_TARGET }}
      #     asset_name: ${{ env.RESUME_NAME }}
      #     asset_content_type: application/pdf