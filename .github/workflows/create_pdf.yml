name: LaTeX to PDF

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: Build PDF
    runs-on: ubuntu-latest

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3

      - name: Install texlive
        run: sudo apt install texlive-base

      - name: Install texlive-latex-extra
        run: sudo apt-get install texlive-latex-extra

      - name: Build pdf
        run: pdflatex -jobname resume main.tex

      - name: Upload PDF Artifact
        uses: actions/upload-artifact@v3
        with:
          name: resume
          path: resume.pdf

  deploy:
    name: Deploy PDF
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download PDF Artifact
        uses: actions/download-artifact@v3
        with:
          name: resume

      - name: Test artifact download
        run: ls -R

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resume.pdf  # Adjust this to your PDF file name
          asset_name: resume.pdf  # Adjust this to your PDF file name
          asset_content_type: application/pdf

      # - name: Generate Version
      #   id: generate_version
      #   run: |
      #     # VERSION="v.$(date +'%Y%m%d%H%M')"
      #     # VERSION="v.${{ github.run_id }}.${{ github.run_number }}"
      #     VERSION="latest"
      #     echo "VERSION=${VERSION}" >> $GITHUB_ENV
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./resume.pdf
      #     asset_name: resume.pdf  # Adjust this to your PDF file name
      #     asset_content_type: application/pdf
      #   # run: |
      #   #   TAG_NAME="${{ env.VERSION }}"
      #   #   RELEASE_TOKEN="${{ secrets.RELEASE_TOKEN }}"
      #   #   curl -X POST "https://api.github.com/repos/${{ github.repository }}/releases" -H "Authorization: token $RELEASE_TOKEN" -d "{\"tag_name\":\"$TAG_NAME\"}"
        

      # # - name: Upload PDF Asset
      # #   id: upload-release-asset
      # #   run: |
      # #     PDF_PATH="resume.pdf"
      # #     TAG_NAME="${{ env.VERSION }}"
      # #     RELEASE_TOKEN="${{ secrets.RELEASE_TOKEN }}"
      # #     UPLOAD_URL=$(curl -X GET "https://api.github.com/repos/${{ github.repository }}/releases/tags/$TAG_NAME" -H "Authorization: token $RELEASE_TOKEN" | jq -r '.upload_url' | sed -e 's/{.*}//')
      # #     curl -X POST "$UPLOAD_URL?name=$PDF_PATH" -H "Authorization: token $RELEASE_TOKEN" -H "Content-Type: application/pdf" --data-binary "@$PDF_PATH"
      # #   env:
      # #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
